[build-system]
requires = ["flit_core >=3.9,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "hikari-lightbulb"
readme = "README.md"
requires-python = ">=3.10.0,<3.13"
authors = [{name = "tandemdude", email = "tandemdude1@gmail.com"}]
keywords = ["hikari"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = ["hikari>=2.0.0.dev126, <3", "networkx>=3.3, <4", "async-timeout>=4, <5"]
dynamic = ["version", "description"]

[project.urls]
Homepage = "https://github.com/tandemdude/hikari-lightbulb"
Repository = "https://github.com/tandemdude/hikari-lightbulb"
Documentation = "https://hikari-lightbulb.readthedocs.io/en/latest/"
Changelog = "https://hikari-lightbulb.readthedocs.io/en/latest/changelog.html"

[project.optional-dependencies]
localization = ["polib>=1.2.0, <2"]
crontrigger = ["croniter>=3.0.3, <4"]
dev = ["nox==2024.4.15"]
"dev.docs" = [
    "sphinx>=8.0.2, <9",
    "furo==2024.8.6",
    "myst-parser>=4.0.0, <5",
    "sphinx-copybutton>=0.5.2, <1",
    "sphinx-inline-tabs==2023.4.21",
    "sphinx_design>=0.6.0, <1",
    "sphinx-prompt>=1.8.0, <2",
    "sphinx-notfound-page>=1.0.2, <2",
    "sphinxext-opengraph>=0.9.1, <1",
    "sphinxcontrib-mermaid>=0.9.2, <1",
]
"dev.format" = ["ruff==0.6.2"]
"dev.typecheck" = [
    "pyright==1.1.377",
    "typing-extensions>=4.12.2, <5",
    "types-networkx>=3.2.1.20240703, <4",
    "types-polib>=1.2.0.20240327, <2",
    "types-croniter>=3.0.0.20240727, <4",
]
"dev.slotscheck" = ["slotscheck>=0.19.0, <1"]
"dev.test" = [
    "pytest>=8.3.2, <9",
    "pytest-asyncio>=0.23.8, <0.25",
    "pytest-cov>=5.0.0, <6",
    "pytest-randomly>=3.15.0, <4"
]
"dev.release" = ["flit==3.9.0"]
"dev.changelog" = ["towncrier==24.8.0"]

[tool.flit.module]
name = "lightbulb"

[tool.towncrier]
directory = "fragments"
filename = "CHANGES.md"
package = "lightbulb"
title_format = "v{version} ({project_date})"
issue_format = "[#{issue}](https://github.com/tandemdude/hikari-lightbulb/issues/{issue})"
orphan_prefix = "+"

[tool.towncrier.fragment.feature]
name = "Features"

[tool.towncrier.fragment.bugfix]
name = "Bugfixes"

[tool.towncrier.fragment.doc]
name = "Documentation"

[tool.towncrier.fragment.removal]
name = "Deprecations and Removals"

[tool.towncrier.fragment.misc]
name = "Miscellaneous"

[tool.black]
line-length     = 120
target-version  = ["py310"]
include         = ".*py$"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
preview = true
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "I",     # isort
    "TCH",   # typechecking imports
    "N",     # naming
    "ASYNC", # async lints
    "Q",     # enforce double-quotes
    "RSE",   # avoid needless parens
    "SIM",   # simplification
    "RUF",   # ruff lints
    "D2",    # Docstring formatting
    "D213",  # Multi-line docstring summary should start at the second line
    "D3",    # Use triple-quotes
    "D415",  # First line of docstring should end with period
    "D417",  # Missing argument descriptions in docstring
    "D418",  # No docstring on @overload
    "D419",  # No empty docstring
    "ANN2",  # Function missing return type annotation
]
fixable = [
    "I",     # isort errors
    "TCH",   # typechecking imports
    "F401",  # unused import
    "F404",  # late __future__ import
    "F541",  # f-string with no placeholders
    "RUF022",  # __all__ is not sorted
    "RUF023",  # {}.__slots__ is not sorted
]
ignore = [
    "D212",  # Multi-line docstring summary should start at the first line
    "RUF001", # ambiguous character
    "N818",   # exception name should end in Error
    "D205",   # 1 blank line required between summary line and description
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
# F401 (Unused import) - init files don't use their imports
# F403 (Star import used) - hopefully we're sensible enough to know what objects modules contain
# F405 (Import via star) - everything is imported to top-level
"__init__.py" = ["F401", "F403", "F405"]

# N802 (Function name should be lowercase)
# RUF029 (Function is declared async but does not use async/await)
"tests/*.py" = ["N802", "RUF029"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.slotscheck]
strict-imports = true
require-superclass = true
require-subclass = true
exclude-classes = """
(
    ^lightbulb\\.commands\\.commands:CommandMeta$
)
"""

[tool.pyright]
include = ["lightbulb", "examples", "tests"]
exclude = ["docs", ".github"]
pythonVersion = "3.10"
typeCheckingMode = "strict"

reportUnnecessaryTypeIgnoreComment = "error"
reportMissingTypeStubs = "none"
reportImportCycles = "none" # Doesn't account for TYPE_CHECKING
reportIncompatibleMethodOverride = "none"  # This relies on ordering for keyword-only arguments
reportOverlappingOverload = "none" # Type-Vars in last overloads may interfere
reportIncompatibleVariableOverride = "none" # Cannot overwrite abstract properties using attrs
reportPrivateUsage = "none" # Too annoying
reportUnknownMemberType = "warning" # NetworkX is untyped :/

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:.*"@coroutine" decorator is deprecated.*:DeprecationWarning',
    "ignore:.*The loop argument is deprecated.*:DeprecationWarning"
]

[tool.coverage.report]
exclude_also = ["if t.TYPE_CHECKING:"]
